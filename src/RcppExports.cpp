// Generated by using Rcpp::compileAttributes() -> do not edit by hand
// Generator token: 10BE3573-1514-4C36-9D1C-5A225CD40393

#include <RcppArrayFire.h>
#include <Rcpp.h>

using namespace Rcpp;

// put_option_pricer_af
af::array put_option_pricer_af(RcppArrayFire::typed_array<f32> s, double k, double r, double y, double t, double sigma);
RcppExport SEXP _arrayfire_put_option_pricer_af(SEXP sSEXP, SEXP kSEXP, SEXP rSEXP, SEXP ySEXP, SEXP tSEXP, SEXP sigmaSEXP) {
BEGIN_RCPP
    Rcpp::RObject rcpp_result_gen;
    Rcpp::RNGScope rcpp_rngScope_gen;
    Rcpp::traits::input_parameter< RcppArrayFire::typed_array<f32> >::type s(sSEXP);
    Rcpp::traits::input_parameter< double >::type k(kSEXP);
    Rcpp::traits::input_parameter< double >::type r(rSEXP);
    Rcpp::traits::input_parameter< double >::type y(ySEXP);
    Rcpp::traits::input_parameter< double >::type t(tSEXP);
    Rcpp::traits::input_parameter< double >::type sigma(sigmaSEXP);
    rcpp_result_gen = Rcpp::wrap(put_option_pricer_af(s, k, r, y, t, sigma));
    return rcpp_result_gen;
END_RCPP
}

static const R_CallMethodDef CallEntries[] = {
    {"_arrayfire_put_option_pricer_af", (DL_FUNC) &_arrayfire_put_option_pricer_af, 6},
    {NULL, NULL, 0}
};

RcppExport void R_init_arrayfire(DllInfo *dll) {
    R_registerRoutines(dll, NULL, CallEntries, NULL, NULL);
    R_useDynamicSymbols(dll, FALSE);
}
