// Generated by using Rcpp::compileAttributes() -> do not edit by hand
// Generator token: 10BE3573-1514-4C36-9D1C-5A225CD40393

#include <RcppArrayFire.h>
#include <Rcpp.h>

using namespace Rcpp;

// rcpparrayfire_hello_world
af::array rcpparrayfire_hello_world();
RcppExport SEXP _arrayfire_rcpparrayfire_hello_world() {
BEGIN_RCPP
    Rcpp::RObject rcpp_result_gen;
    Rcpp::RNGScope rcpp_rngScope_gen;
    rcpp_result_gen = Rcpp::wrap(rcpparrayfire_hello_world());
    return rcpp_result_gen;
END_RCPP
}
// rcpparrayfire_outerproduct
af::array rcpparrayfire_outerproduct(const RcppArrayFire::typed_array<f32>& x);
RcppExport SEXP _arrayfire_rcpparrayfire_outerproduct(SEXP xSEXP) {
BEGIN_RCPP
    Rcpp::RObject rcpp_result_gen;
    Rcpp::RNGScope rcpp_rngScope_gen;
    Rcpp::traits::input_parameter< const RcppArrayFire::typed_array<f32>& >::type x(xSEXP);
    rcpp_result_gen = Rcpp::wrap(rcpparrayfire_outerproduct(x));
    return rcpp_result_gen;
END_RCPP
}
// rcpparrayfire_innerproduct
double rcpparrayfire_innerproduct(const RcppArrayFire::typed_array<f32>& x);
RcppExport SEXP _arrayfire_rcpparrayfire_innerproduct(SEXP xSEXP) {
BEGIN_RCPP
    Rcpp::RObject rcpp_result_gen;
    Rcpp::RNGScope rcpp_rngScope_gen;
    Rcpp::traits::input_parameter< const RcppArrayFire::typed_array<f32>& >::type x(xSEXP);
    rcpp_result_gen = Rcpp::wrap(rcpparrayfire_innerproduct(x));
    return rcpp_result_gen;
END_RCPP
}
// rcpparrayfire_bothproducts
Rcpp::List rcpparrayfire_bothproducts(const RcppArrayFire::typed_array<f32>& x);
RcppExport SEXP _arrayfire_rcpparrayfire_bothproducts(SEXP xSEXP) {
BEGIN_RCPP
    Rcpp::RObject rcpp_result_gen;
    Rcpp::RNGScope rcpp_rngScope_gen;
    Rcpp::traits::input_parameter< const RcppArrayFire::typed_array<f32>& >::type x(xSEXP);
    rcpp_result_gen = Rcpp::wrap(rcpparrayfire_bothproducts(x));
    return rcpp_result_gen;
END_RCPP
}

static const R_CallMethodDef CallEntries[] = {
    {"_arrayfire_rcpparrayfire_hello_world", (DL_FUNC) &_arrayfire_rcpparrayfire_hello_world, 0},
    {"_arrayfire_rcpparrayfire_outerproduct", (DL_FUNC) &_arrayfire_rcpparrayfire_outerproduct, 1},
    {"_arrayfire_rcpparrayfire_innerproduct", (DL_FUNC) &_arrayfire_rcpparrayfire_innerproduct, 1},
    {"_arrayfire_rcpparrayfire_bothproducts", (DL_FUNC) &_arrayfire_rcpparrayfire_bothproducts, 1},
    {NULL, NULL, 0}
};

RcppExport void R_init_arrayfire(DllInfo *dll) {
    R_registerRoutines(dll, NULL, CallEntries, NULL, NULL);
    R_useDynamicSymbols(dll, FALSE);
}
